@use 'sass:color';
@use 'sass:math';

@function get-color-by-value($color, $value: 500) {
    $percent: math.div(500 - $value, 1000);
    $colorResult: color.adjust($color, $lightness: math.percentage($percent));

    // @debug $lightnessValue, $percent, 46% + math.percentage($percent), $colorResult, color.hue($colorResult), color.saturation($colorResult), color.lightness($colorResult);
    $colorString: '#{math.round(color.hue($colorResult))}, #{math.round(color.saturation($colorResult))}, #{math.round(color.lightness($colorResult))}';
    @return $colorString;
}

@mixin color-generator($name, $color) {
    // @debug 'color-generator start #{$name} #{$color} hue:#{color.hue($color)}';
    $root: '--clue-color-#{$name}';
    $lightnessList: 10, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950, 990;
    @each $lightnessValue in $lightnessList {
        $hslValue: get-color-by-value($color, $lightnessValue);
        $colorString: 'hsl(#{$hslValue})';
        // @debug $colorString;
        #{$root}-#{$lightnessValue}-hsl: #{$hslValue};
        #{$root}-#{$lightnessValue}: #{$colorString};
    }
    #{$root}: #{'var(#{$root}-500)'}
}

@mixin color-primary-generator($color) {
    @include color-generator('primary', $color)
}

@mixin color-active-generator($color) {
    @include color-generator('active', $color)
}
@mixin color-positive-generator($color) {
    @include color-generator('positive', $color)
}
@mixin color-negative-generator($color) {
    @include color-generator('negative', $color)
}