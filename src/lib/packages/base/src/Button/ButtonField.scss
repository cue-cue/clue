@use "sass:map";
@use 'sass:list';

@mixin button-field-type($name, $colors) {
    $stateList: '', 'hover', 'active', 'disabled';
    $styleList: 'border-color', 'background-color', 'color';
    $typePostfix: '';
    
    @if $name != '' {
        $typePostfix: '-t-#{$name}'
    }

    $root: '--clue-button-field#{$typePostfix}';
    
    @each $style in $styleList {
        $styleRoot: '#{$root}-#{$style}';

        @each $state in $stateList {

            $statePostfix: '';

            @if $state != '' {
                $statePostfix: '-#{$state}'
            }

            $stateRoot: '#{$styleRoot}#{$statePostfix}';

            $stateKey: $state;
            
            @if $stateKey == '' {
                $stateKey: 'default'
            }

            #{$stateRoot}: #{map.get($colors, $style, $stateKey)}
        }
    }
}

@mixin button-field-vars() {
    //BASE
    @include button-field-type('', (
        'background-color': (
            'default': var(--clue-color-primary),
            'hover': var(--clue-color-primary-600),
            'active': var(--clue-color-primary-600),
            'disabled': var(--clue-color-gray-10)
        ),
        'color': (
            'default': var(--clue-color-primary-10),
            'hover': var(--clue-color-primary-10),
            'active': var(--clue-color-primary-10),
            'disabled': var(--clue-color-gray-300)
        ),
        'border-color': (
            'default': transparent,
            'hover': transparent,
            'active': transparent,
            'disabled': transparent
        )
    ));

    @include button-field-type('action', (
        'background-color': (
            'default': var(--clue-color-active),
            'hover': var(--clue-color-active-600),
            'active': var(--clue-color-active-600),
            'disabled': var(--clue-button-field-background-color-disabled)
        ),
        'color': (
            'default': var(--clue-color-gray-800),
            'hover': var(--clue-color-gray-800),
            'active': var(--clue-color-gray-800),
            'disabled': var(--clue-button-field-color-disabled)
        ),
        'border-color': (
            'default': transparent,
            'hover': transparent,
            'active': transparent,
            'disabled': transparent
        )
    ));

    @include button-field-type('secondary', (
        'background-color': (
            'default': var(--clue-color-primary-10),
            'hover': var(--clue-color-primary-100),
            'active': var(--clue-color-primary-100),
            'disabled': var(--clue-button-field-background-color-disabled)
        ),
        'color': (
            'default': var(--clue-color-primary),
            'hover': var(--clue-color-primary),
            'active': var(--clue-color-primary),
            'disabled': var(--clue-button-field-color-disabled)
        ),
        'border-color': (
            'default': transparent,
            'hover': transparent,
            'active': transparent,
            'disabled': transparent
        )
    ));

    @include button-field-type('ghost', (
        'background-color': (
            'default': transparent,
            'hover': var(--clue-color-primary-10),
            'active': var(--clue-color-primary-10),
            'disabled': transparent
        ),
        'color': (
            'default': var(--clue-color-primary),
            'hover': var(--clue-color-primary),
            'active': var(--clue-color-primary),
            'disabled': var(--clue-button-field-color-disabled),
        ),
        'border-color': (
            'default': transparent,
            'hover': transparent,
            'active': transparent,
            'disabled': transparent
        )
    ));

    @include button-field-type('outlined', (
        'background-color': (
            'default': transparent,
            'hover': var(--clue-color-primary-10),
            'active': var(--clue-color-primary-10),
            'disabled': transparent,
        ),
        'color': (
            'default': var(--clue-color-primary),
            'hover': var(--clue-color-primary),
            'active': var(--clue-color-primary),
            'disabled': var(--clue-button-field-color-disabled),
        ),
        'border-color': (
            'default': var(--clue-color-primary-100),
            'hover': var(--clue-color-primary-100),
            'active': var(--clue-color-primary-100),
            'disabled': transparent,
        )
    ));
}

@mixin button-field-type-apply($type: '') {
    $stateList: '', 'hover', 'active', 'disabled';
    $styleList: 'border-color', 'background-color', 'color';

    $typePostfix: '';

    @if $type != '' {
        $typePostfix: '-t-#{$type}';
    }

    $varRoot: '--clue-button-field#{$typePostfix}';

    @each $style in $styleList {
        @each $state in $stateList {
            $statePostfix: '';

            @if $state != '' {
                $statePostfix: '-#{$state}'
            }

            $styleWithState: #{$style}#{$statePostfix};

            --#{$styleWithState}: #{'var(#{$varRoot}-#{$styleWithState})'};
        }
    }
}